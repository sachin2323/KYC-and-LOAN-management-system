PACKAGE DOCUMENTATION

package organization
    import "."


FUNCTIONS

func Add(APIstub shim.ChaincodeStubInterface, args []string, mspid string) sc.Response
    Add adds an organization to the state

    args : [id, name, email, type, createdAt]

func AddRecordID(APIstub shim.ChaincodeStubInterface, recordAsBytes []byte, userOrg Organization) sc.Response
    AddRecordID adds a recordID to an organization

func AddRequest(APIstub shim.ChaincodeStubInterface, args []string, currentOrg Organization) sc.Response
    AddRequest will add a request to the user ledger

    args : [aadharID]

func AddRole(APIstub shim.ChaincodeStubInterface, args []string, organizationID string) sc.Response
    AddRole adds a new role to an organization

    args: [role]

func AddUserID(APIstub shim.ChaincodeStubInterface, userAsBytes []byte, userOrg Organization) sc.Response
    AddUserID adds a userID to an organization

func ApproveRequest(APIstub shim.ChaincodeStubInterface, args []string) sc.Response
    ApproveRequest will update the status

    args : [userID, bankId, statusUpdate] accepted status : ["Approved",
    "Rejected"]

func GetRoles(roleType string) []string
    GetRoles returns 'constant' values for defined Role Type

    roleType is the type of organization in question.

TYPES

type Organization struct {
    ID                 string   `json:"id"`
    Name               string   `json:"name"`
    Email              string   `json:"email"`
    Roles              []string `json:"roles"`
    Type               string   `json:"type"`
    MSPID              string   `json:"mspid"`
    UserIDs            []string `json:"userIds"`
    RecordIDs          []string `json:"recordIds"`
    ApprovalRequestIDs []string `json:"approvalRequestIds"`
    CreatedAt          string   `json:"createdAt"`
    UpdatedAt          string   `json:"updatedAt"`
    Class              string   `json:"class"`
}
    Organization can have multiple roles, and users can be added only
    according to these roles


